[{"path":"https://terojii.github.io/silk/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 silk authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://terojii.github.io/silk/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tero Jalkanen. Author, maintainer.","code":""},{"path":"https://terojii.github.io/silk/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jalkanen T (2024). silk: Making Curves Smooth Silk. R package version 0.0.1.9000, https://github.com/TeroJii/silk, https://terojii.github.io/silk/.","code":"@Manual{,   title = {silk: Making Curves Smooth as Silk},   author = {Tero Jalkanen},   year = {2024},   note = {R package version 0.0.1.9000, https://github.com/TeroJii/silk},   url = {https://terojii.github.io/silk/}, }"},{"path":"https://terojii.github.io/silk/index.html","id":"silk-","dir":"","previous_headings":"","what":"Making Curves Smooth as Silk","title":"Making Curves Smooth as Silk","text":"goal silk make curves outliers smooth silk.","code":""},{"path":"https://terojii.github.io/silk/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Making Curves Smooth as Silk","text":"can install development version silk GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"TeroJii/silk\")"},{"path":"https://terojii.github.io/silk/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Making Curves Smooth as Silk","text":"objective package provide simple way correct individual outlier values. package includes two main functions: find_outliers() correct_outliers(), finding correcting outliers, respectively. Let’s take look functions action.","code":""},{"path":"https://terojii.github.io/silk/index.html","id":"detecting-outliers-in-example-data","dir":"","previous_headings":"Example","what":"Detecting outliers in example data","title":"Making Curves Smooth as Silk","text":"package contains example dataset silk_data1 can use demonstrate functionality package. visualize data, see unusual values data.  can detect unsual data points usign silk::find_outliers() function, takes data.frame column name input, returns modified version input data.frame. can see, function added new columns data. .outlier column indicates whether value outlier .","code":"library(silk) ## basic example code data(\"silk_data1\")  silk_data1 |>    head() #>   time         y   group #> 1    1  8.584244 series1 #> 2    2  9.159694 series1 #> 3    3  9.717704 series1 #> 4    4 10.249923 series1 #> 5    5 10.748432 series1 #> 6    6 11.205878 series1 library(ggplot2)  silk_data1 |>    ggplot2::ggplot(ggplot2::aes(x = time, y = y)) +   ggplot2::geom_line() +   ggplot2::theme_bw() +   ggplot2::facet_wrap(~group) silk_data1 |>    silk::find_outliers(col = \"y\", group_col = \"group\") |>   head() #>   time         y   group  .median     .mad .outlier #> 1    1  8.584244 series1 8.065949 2.713192    FALSE #> 2    2  9.159694 series1 8.065949 2.713192    FALSE #> 3    3  9.717704 series1 8.065949 2.713192    FALSE #> 4    4 10.249923 series1 8.065949 2.713192    FALSE #> 5    5 10.748432 series1 8.065949 2.713192    FALSE #> 6    6 11.205878 series1 8.065949 2.713192    FALSE"},{"path":"https://terojii.github.io/silk/index.html","id":"visulizing-the-outliers","dir":"","previous_headings":"Example","what":"Visulizing the outliers","title":"Making Curves Smooth as Silk","text":"can visualize outliers using ggplot2 package:","code":"silk_data1 |>    silk::find_outliers(col = \"y\", group_col = \"group\") |>   ggplot2::ggplot(ggplot2::aes(x = time, y = y)) +   ggplot2::geom_line() +   ggplot2::geom_point(ggplot2::aes(color = .outlier)) +   ggplot2::theme_bw() +   ggplot2::facet_wrap(~group) +   ggplot2::theme(legend.position = \"top\")"},{"path":"https://terojii.github.io/silk/index.html","id":"correcting-the-outliers","dir":"","previous_headings":"Example","what":"Correcting the outliers","title":"Making Curves Smooth as Silk","text":"silk package also includes function correcting outliers. silk::correct_outliers() function can used together silk::find_outliers() function following fashion:  silk::correct_outliers() function overwrites original column values, replacing outlier values mean previous following observation data.","code":"silk_data1 |>    silk::find_outliers(col = \"y\", group_col = \"group\") |>    silk::correct_outliers(col = \"y\") |>    ggplot2::ggplot(ggplot2::aes(x = time, y = y)) +   ggplot2::geom_line() +   ggplot2::theme_bw() +   ggplot2::facet_wrap(~group) +   ggplot2::ggtitle(\"Corrected data\")"},{"path":"https://terojii.github.io/silk/reference/correct_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Correcting individual outliers — correct_outliers","title":"Correcting individual outliers — correct_outliers","text":"Takes mean previous next value outlier observation, replaces outlier value mean value. used find_outliers() function.","code":""},{"path":"https://terojii.github.io/silk/reference/correct_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correcting individual outliers — correct_outliers","text":"","code":"correct_outliers(x, col)"},{"path":"https://terojii.github.io/silk/reference/correct_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correcting individual outliers — correct_outliers","text":"x data.frame data including .outlier column col column correct outliers ","code":""},{"path":"https://terojii.github.io/silk/reference/correct_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correcting individual outliers — correct_outliers","text":"Returns modified version input data.frame","code":""},{"path":"https://terojii.github.io/silk/reference/correct_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correcting individual outliers — correct_outliers","text":"","code":"silk_data1 |>   find_outliers(\"y\", group_col = \"group\") |>   correct_outliers(col = \"y\") |>   head() #>   time         y   group  .median     .mad .outlier #> 1    1  8.584244 series1 8.065949 2.713192    FALSE #> 2    2  9.159694 series1 8.065949 2.713192    FALSE #> 3    3  9.717704 series1 8.065949 2.713192    FALSE #> 4    4 10.249923 series1 8.065949 2.713192    FALSE #> 5    5 10.748432 series1 8.065949 2.713192    FALSE #> 6    6 11.205878 series1 8.065949 2.713192    FALSE"},{"path":"https://terojii.github.io/silk/reference/find_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find outliers in a dataset — find_outliers","title":"Find outliers in a dataset — find_outliers","text":"function finding outliers dataset. Uses Median Absolute Deviation (MAD) detect values certain distance away median value. See stats::mad() information.","code":""},{"path":"https://terojii.github.io/silk/reference/find_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find outliers in a dataset — find_outliers","text":"","code":"find_outliers(x, col, group_col = NULL, threshold = 10)"},{"path":"https://terojii.github.io/silk/reference/find_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find outliers in a dataset — find_outliers","text":"x data.frame data col column find outliers group_col column group threshold threshold value finding outliers. Outliers threshold * MAD away median.","code":""},{"path":"https://terojii.github.io/silk/reference/find_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find outliers in a dataset — find_outliers","text":"modified version input data.frame, includes columns median, MAD logical column indicate outliers.","code":""},{"path":"https://terojii.github.io/silk/reference/find_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find outliers in a dataset — find_outliers","text":"","code":"silk_data1 |>   find_outliers(\"y\", group_col = \"group\") |>   head() #>   time         y   group  .median     .mad .outlier #> 1    1  8.584244 series1 8.065949 2.713192    FALSE #> 2    2  9.159694 series1 8.065949 2.713192    FALSE #> 3    3  9.717704 series1 8.065949 2.713192    FALSE #> 4    4 10.249923 series1 8.065949 2.713192    FALSE #> 5    5 10.748432 series1 8.065949 2.713192    FALSE #> 6    6 11.205878 series1 8.065949 2.713192    FALSE"},{"path":"https://terojii.github.io/silk/reference/silk_data1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data for the silk package. — silk_data1","title":"Example data for the silk package. — silk_data1","text":"dataset used demonstrate functionality silk package. Data contains two series data, 1000 observations. Two outliers present series.","code":""},{"path":"https://terojii.github.io/silk/reference/silk_data1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data for the silk package. — silk_data1","text":"","code":"silk_data1"},{"path":[]},{"path":"https://terojii.github.io/silk/reference/silk_data1.html","id":"silk-data-","dir":"Reference","previous_headings":"","what":"silk_data1","title":"Example data for the silk package. — silk_data1","text":"data frame 2,000 rows 3 columns: time x-axis variable, time y Response variable group Grouping variable two series","code":""},{"path":"https://terojii.github.io/silk/reference/silk_data1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data for the silk package. — silk_data1","text":"silk package","code":""},{"path":"https://terojii.github.io/silk/news/index.html","id":"silk-development-version","dir":"Changelog","previous_headings":"","what":"silk (development version)","title":"silk (development version)","text":"Adding FFT based smoothing method Fix outlier correction two consecutive outliers (#1)","code":""},{"path":"https://terojii.github.io/silk/news/index.html","id":"silk-001","dir":"Changelog","previous_headings":"","what":"silk 0.0.1","title":"silk 0.0.1","text":"Creating basic implementation functions detecting correcting outliers.","code":""}]
